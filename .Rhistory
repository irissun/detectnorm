rownames(corm1) <- colnames(corm1)
datmean1 <- unlist(dat1[16, 1:14])
datsd1 <- unlist(dat1[17, 1:14])
covm <- as.matrix((datsd1 %*% t(datsd1))* corm1)
covm1 <- as.matrix((datsd1 %*% t(datsd1))* corm1)
#' ## Block 1
reg1 <-'
Game.Motivation ~ Gender + Age + Educational.attainment + Economic.activity.status
'
fitreg1 <- sem(reg1, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' function to compute adjusted r-squared
adjrsq <- function(rsq, n, p){
adjrsq <- 1 - (1 - rsq)*(n-1)/(n-p-1)
return(adjrsq)
}
#' function to compute
fstat <- function(adj, df1, df2){
fs <- round(adj*df2/((1-adj)*df1),3)
p.value <- round(pf(fs, df1 = df1, df2 = df2, lower.tail = F),3)
result <- c(fs = fs, pvalue = p.value)
return(result)
}
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .079, n = 203, p = 4)
fstat(adj= .079, df1 = 4, df2 = 203-4-1)
fstat(adj= .06, df1 = 4, df2 = 203-4-1)
fstat(adj= .079, df1 = 4, df2 = 203-4-1)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .079, n = 203, p = 4)
fstat(adj= .079, df1 = 4, df2 = 203-4-1)
rownmaes(covm1)
rownames(covm1)
#' ## Block 2
reg2 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + acceptability
'
fitreg2 <- sem(reg2, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
#' ## Block 1
reg1 <-'
Game.Motivation ~ Gender + Age + Educational.attainment + Economic.activity.status
'
fitreg1 <- sem(reg1, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .079, n = 203, p = 4)
fstat(adj= .079, df1 = 4, df2 = 203-4-1)
#' ## Block 2
reg2 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + acceptability
'
fitreg2 <- sem(reg2, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
rownames(covm1)
#' ## Block 2
reg2 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability
'
fitreg2 <- sem(reg2, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
summary(fitreg2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .079, n = 203, p = 4)
adjrsq(rsq = .246, n = 203, p = 8)
fstat(adj= .246, df1 = 8, df2 = 203-8-1)
rownames(covm1)
#' ## Block 3
reg3 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability + Hassles + Fatigue_change1 +
Self.efficacy
'
fitreg3 <- sem(reg3, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg3, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
summary(fitreg2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
summary(fitreg3, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .337, n = 203, p = 11)
fstat(adj= .337, df1 = 11, df2 = 203-11-1)
rownames(covm1)
#' ## Block 4
reg4 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability + Hassles + Fatigue_change1 +
Self.efficacy + Social.Cynicism
'
fitreg4 <- sem(reg4, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .390, n = 203, p = 12)
fstat(adj= .390, df1 = 12, df2 = 203-12-1)
.215-.060
.351-.200
.351-.299
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE, ci = TRUE)
#' Correlation Matrix m
setwd("~/Documents/Postdoc in PolyU/Project 202202 ONLINE")
library(MASS)
library(lavaan)
library(semPlot)
#' function to compute adjusted r-squared
adjrsq <- function(rsq, n, p){
adjrsq <- 1 - (1 - rsq)*(n-1)/(n-p-1)
return(adjrsq)
}
#' function to compute
fstat <- function(adj, df1, df2){
fs <- round(adj*df2/((1-adj)*df1),3)
p.value <- round(pf(fs, df1 = df1, df2 = df2, lower.tail = F),3)
result <- c(fs = fs, pvalue = p.value)
return(result)
}
#' this dat1 is with game motivation
dat1 <- read.csv("cor_dat.csv")
corm1 <- dat1[1:14,1:14]
corm1[lower.tri(corm1)]
corm1[upper.tri(corm1, diag=F)] <- corm1[lower.tri(corm1)]
rownames(corm1) <- colnames(corm1)
datmean1 <- unlist(dat1[16, 1:14])
datsd1 <- unlist(dat1[17, 1:14])
covm1 <- as.matrix((datsd1 %*% t(datsd1))* corm1)
#' ## Block 1
reg1 <-'
Game.Motivation ~ Gender + Age + Educational.attainment + Economic.activity.status
'
fitreg1 <- sem(reg1, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .079, n = 203, p = 4)
fstat(adj= .079, df1 = 4, df2 = 203-4-1)
#' ## Block 2
reg2 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability
'
fitreg2 <- sem(reg2, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .246, n = 203, p = 8)
fstat(adj= .246, df1 = 8, df2 = 203-8-1)
#' ## Block 3
reg3 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability + Hassles + Fatigue_change1 +
Self.efficacy
'
fitreg3 <- sem(reg3, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg3, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .337, n = 203, p = 11)
fstat(adj= .337, df1 = 11, df2 = 203-11-1)
#' ## Block 4
reg4 <- '
Game.Motivation ~ Gender + Age + Educational.attainment +
Economic.activity.status + Severity + Concern +
Adherence + Acceptability + Hassles + Fatigue_change1 +
Self.efficacy + Social.Cynicism
'
fitreg4 <- sem(reg4, sample.cov = covm1, sample.mean = datmean1,
sample.nobs = 203)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE, ci = TRUE)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE, ci = TRUE)
adjrsq(rsq = .390, n = 203, p = 12)
fstat(adj= .390, df1 = 12, df2 = 203-12-1)
#' IGD
#'  This dat is with two game motivation-escape and coping
dat <- read.csv("20220315sum_data.csv")
corm <- dat[1:16,3:18]
corm[lower.tri(corm)]
corm[upper.tri(corm, diag=F)] <- corm[lower.tri(corm)]
corm
datmean <- unlist(dat[17,3:18])
datsd <- unlist(dat[18,3:18])
covm <- as.matrix((datsd %*% t(datsd))* corm)
rownames(covm) <- colnames(covm)
#save(covm, datmean, datsd, file = "sum_dat.Robj")
#' Regression
#' the file Analysis Electronic games 220311 (n= 203) DV_IGD (Cont')
#' ## Block 1
reg1 <-'
IGD ~ Gender + Age + Edu + Eco
'
fitreg1 <- sem(reg1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fitreg1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adjrsq(rsq = .072, n = 203, p = 4)
adj1 <- adjrsq(rsq = .072, n = 203, p = 4)
fstat(adj= .072, df1 = 4, df2 = 203-4-1)
#' ## Block 2
reg2 <-'
IGD ~ Gender + Age + Edu + Eco + Sev + Con + Adh + Accept
'
fitreg2 <- sem(reg2, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fitreg2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adj2 <- adjrsq(rsq = .191, n = 203, p = 6); adj2
fstat(adj= .191, df1 = 6, df2 = 203-6-1)
colnames(covm)
#' ## Block 3
reg3 <-'
IGD ~ Gender + Age + Edu + Eco + Sev + Con + Adh + Accept +
Hassles + Fatigue + Efficacy + Cynicism
'
fitreg3 <- sem(reg3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fitreg3, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adj2 <- adjrsq(rsq = .285, n = 203, p = 10); adj2
adj2 <- adjrsq(rsq = .285, n = 203, p = 12); adj2
fstat(adj= .285, df1 = 12, df2 = 203-12-1)
#' ## Block 4
reg4 <-'
IGD ~ Gender + Age + Edu + Eco + Sev + Con + Adh + Accept +
Hassles + Fatigue + Efficacy + Cynicism +  Escape + Coping
'
fitreg4 <- sem(reg4, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' ## Block 4
reg4 <-'
IGD ~ Gender + Age + Edu + Eco + Sev + Con + Adh + Accept +
Hassles + Fatigue + Efficacy + Cynicism +  Escape + Coping
'
fitreg4 <- sem(reg4, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fitreg4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
adj2 <- adjrsq(rsq = .580, n = 203, p = 14); adj2
fstat(adj= .580, df1 = 14, df2 = 203-14-1)
54.9-23
54.9-24
colnames(covm)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping
Escape ~ Hassles + Fatigue + Cynicism + Efficacy
Coping ~ Hassles + Fatigue + Cynicism + Efficacy
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Efficacy ~ Sev + Con + Adh + Accept
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
mod2 <- '
IGD ~ Escape + Coping
Escape ~ Hassles + Fatigue + Cynicism
Coping ~ Hassles + Fatigue + Cynicism
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
'
fit2 <- sem(mod2, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
mod2 <- '
IGD ~ Escape + Coping
Escape ~ Hassles + Fatigue + Cynicism
Coping ~ Hassles + Fatigue + Cynicism
Hassles ~ Sev + Con +  Accept
Fatigue ~ Sev + Con +  Accept
Cynicism ~ Sev + Con +  Accept
'
fit2 <- sem(mod2, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Concern->cynicism->coping-> IGD
mod3 <- '
IGD ~ a3*Coping + b2*Cynicism + c*Concern
Coping ~ a2*Cynicism + b1*Concern
Cynicism ~ a1*Concern
#mediation
ind_total:=a3*a2*a1
ind_a1a2 := a1*a2
ind_a2a3 := a2*a3
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
#' Concern->cynicism->coping-> IGD
mod3 <- '
IGD ~ a3*Coping + b2*Cynicism + c*Concern
Coping ~ a2*Cynicism + b1*Concern
Cynicism ~ a1*Concern
#mediation
ind_total := a3*a2*a1
ind_a1a2  := a1*a2
ind_a2a3 := a2*a3
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
#' Concern->cynicism->coping-> IGD
mod3 <- '
IGD ~ a3*Coping + b2*Cynicism + c*Concern
Coping ~ a2*Cynicism + b1*Concern
Cynicism ~ a1*Concern
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
mod3 <- '
IGD ~ a3*Coping + b2*Cynicism + c*Concern
Coping ~ a2*Cynicism + b1*Concern
Cynicism ~ a1*Concern
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
mod3 <- '
IGD ~ Coping + Cynicism + Concern
Coping ~ Cynicism + Concern
Cynicism ~ Concern
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
#' Concern->cynicism->coping-> IGD
mod3 <- '
IGD ~ a3*Coping + b2*Cynicism + c*Con
Coping ~ a2*Cynicism + b1*Con
Cynicism ~ a1*Con
#mediation
ind_total := a3*a2*a1
ind_a1a2  := a1*a2
ind_a2a3 := a2*a3
'
fit3 <- sem(mod3, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit2, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
summary(fit3, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Concern->cynicism->escape-> IGD
mod4 <- '
IGD ~ a3*Escape + b2*Cynicism + c*Con
Escape ~ a2*Cynicism + b1*Con
Cynicism ~ a1*Con
#mediation
ind_total := a3*a2*a1
ind_a1a2  := a1*a2
ind_a2a3 := a2*a3
'
fit4 <- sem(mod4, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit4, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
rownames(covm1)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping
Escape ~ Hassles + Fatigue + Cynicism + Efficacy
Coping ~ Hassles + Fatigue + Cynicism + Efficacy
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Efficacy ~ Sev + Con + Adh + Accept
Escape ~~ Coping
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping
Escape ~ Hassles + Fatigue + Cynicism + Efficacy
Coping ~ Hassles + Fatigue + Cynicism + Efficacy
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Efficacy ~ Sev + Con + Adh + Accept
Escape ~~ Coping
Hassles ~~ Fatigue
Fatigue ~~ Cynicism
Hassles ~~ Cynicism
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping + Hassles
Escape ~ Hassles + Fatigue + Cynicism + Efficacy
Coping ~ Hassles + Fatigue + Cynicism + Efficacy
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Efficacy ~ Sev + Con + Adh + Accept
Escape ~~ Coping
Hassles ~~ Fatigue
Fatigue ~~ Cynicism
Hassles ~~ Cynicism
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping + Hassles
Efficacy ~ Escape + Coping + Hassles
Escape ~ Hassles + Fatigue + Cynicism
Coping ~ Hassles + Fatigue + Cynicism
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Escape ~~ Coping
Hassles ~~ Fatigue
Fatigue ~~ Cynicism
Hassles ~~ Cynicism
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
#' Mediational Analysis: covm
mod1 <- '
IGD ~ Escape + Coping + Hassles
Efficacy ~ Hassles + Fatigue + Cynicism
Escape ~ Hassles + Fatigue + Cynicism
Coping ~ Hassles + Fatigue + Cynicism
Hassles ~ Sev + Con + Adh + Accept
Fatigue ~ Sev + Con + Adh + Accept
Cynicism ~ Sev + Con + Adh + Accept
Escape ~~ Coping
Hassles ~~ Fatigue
Fatigue ~~ Cynicism
Hassles ~~ Cynicism
'
fit1 <- sem(mod1, sample.cov = covm, sample.mean = datmean,
sample.nobs = 203)
summary(fit1, fit.measure = TRUE,
standardized = TRUE, rsquare = TRUE)
devtools::load_all()
test <- rtruncnorm(n = 100, a = 0, b = 14, mean = 12.56, sd = .9)
test <- truncnorm::rtruncnorm(n = 100, a = 0, b = 14, mean = 12.56, sd = .9)
ptrunc(vmean= mean(test), vsd = sd(test), lo=0, hi=20,xstart = c(mean(test), sd(test)))
devltools::load_all()
devtools::load_all()
ptrunc(vmean= mean(test), vsd = sd(test), lo=0, hi=20,xstart = c(mean(test), sd(test)))
ptrunc(vmean = 13.2, vsd = .9, lo = 0, hi = 14, autoAdjust = TRUE)
ans2 <- ptrunc(vmean = 13.2, vsd = .9, lo = 0, hi = 14, autoAdjust = TRUE)
ans2$x[[1]]
ans2$x[[2]]
devtools::load_all()
destrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
destrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
destrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
destrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
?nleqslv
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
devtools::load_all()
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
ptrunc(vmean = 3.611, vsd = 2.216, lo = 0, hi = 6, autoAdjust = TRUE)
